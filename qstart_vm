#!/bin/bash

checkenv() {
	if [ -z "${!1}" ]; then
		echo "required env var '$1' not defined"
		exit 1
	fi
}

findcmd() {
	which $1 > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo "can't find required binary: '$1'"
		exit 1
	fi
}

if [ $# -ne 1 ]; then
	echo "usage: $(basename $0) <image>"
	exit 1
fi

# required cmdline arg is the image to run
IMAGE=$1
if [ ! -e $IMAGE ]; then
	echo "image file \"$IMAGE\" not found"
	exit 1
fi

# see if this image is already running
ps ax | grep qemu-system | grep $(basename $IMAGE) > /dev/null 2>&1
if [ $? -eq 0 ]; then
	echo "this image ($(basename $IMAGE)) already appears to be running"
	exit 1
fi

# find the CONFIG file in the same dir as the image
IMAGEDIR="$(dirname $1)/"
if [ ! -e "$IMAGEDIR/CONFIG" ]; then
	echo "can't find CONFIG file at image location \"$IMAGEDIR\""
	exit 1
fi
source "$IMAGEDIR/CONFIG" > /dev/null 2>&1
if [ $? -ne 0 ]; then
	echo "can't source CONFIG file at image location \"$IMAGEDIR\""
	exit 1
fi
export IMAGEDIR=$IMAGEDIR

checkenv MACADDR
export MACADDR=$MACADDR

GRAPHIC=""
if [ -z "$USEGUI" -o x"$USEGUI" = x"0" ]; then
	GRAPHIC="-nographic"
fi

if [ -z "$NETUSER" -o x"$NETUSER" = x"0" ]; then
	checkenv IPBASE
	export IPBASE=$IPBASE
	export USERID=$(whoami)
	checkenv USERID
	export GROUPID=$(groups | cut -d' ' -f1)
	checkenv GROUPID

	findcmd qnet_up
	findcmd qnet_down

	TAPDEV=$(sudo -E $(dirname $(which $0))/qnet_up)
	if [ $? -ne 0 ]; then
		echo "qnet_up failed"
		exit 1
	fi
	echo "tap device: $TAPDEV"
	NETCMD="tap,ifname=$TAPDEV,script=no,downscript=no"
else
	NETCMD="user"
fi

qemu-system-x86_64 \
	-enable-kvm \
	-cpu host \
	-smp ${VMSMP:-1} \
	-m ${VMMEM:-512} \
	-drive file=$IMAGE,if=virtio \
	-net nic,model=virtio,macaddr=$MACADDR \
	-net $NETCMD \
	$GRAPHIC

if [ -z "$NETUSER" -o x"$NETUSER" = x"0" ]; then
	sudo -E $(dirname $(which $0))/qnet_down $TAPDEV
fi
